from pyspark.sql import SparkSession
from pyspark.ml.feature import VectorAssembler
from pyspark.ml.classification import RandomForestClassifier
from pyspark.ml.evaluation import MulticlassClassificationEvaluator

def create_spark_session(app_name="AML Detection"):
    spark = SparkSession.builder \
        .appName(app_name) \
        .getOrCreate()
    return spark

def train_model(bucket_path):
    spark = create_spark_session()
    df = spark.read.csv(bucket_path, header=True, inferSchema=True)

    # Example preprocessing: filter and cast
    df = df.filter("amount IS NOT NULL AND amount > 0")
    df = df.withColumnRenamed("is_fraud", "label")  # assuming 'is_fraud' is the target column

    feature_cols = [col for col in df.columns if col not in ('label', 'id')]
    assembler = VectorAssembler(inputCols=feature_cols, outputCol="features")
    data = assembler.transform(df).select("features", "label")

    train, test = data.randomSplit([0.8, 0.2], seed=42)
    model = RandomForestClassifier(labelCol="label", featuresCol="features").fit(train)

    predictions = model.transform(test)
    evaluator = MulticlassClassificationEvaluator(labelCol="label", predictionCol="prediction", metricName="accuracy")
    accuracy = evaluator.evaluate(predictions)
    print(f"Model Accuracy: {accuracy}")

if __name__ == "__main__":
    bucket_path = "s3a://your-bucket-name/transactions.csv"  # Replace with your actual S3 path
    train_model(bucket_path)
